@use "sass:list";
@use "sass:map";

@use "../base/variables" as var;

$slicer-breakpoints: (
  "mobile": var.$mobile-breakpoint,
  "tablet": var.$tablet-breakpoint,
  "desktop": var.$desktop-breakpoint,
  "wide": var.$wide-breakpoint,
  "super-wide": var.$super-wide-breakpoint,
  "hyper-wide": var.$hyper-wide-breakpoint,
  "ultra-wide": var.$ultra-wide-breakpoint,
);

@mixin from($breakpoint) {
  @if map.has-key($slicer-breakpoints, $breakpoint) {
    $min-width: map.get($slicer-breakpoints, $breakpoint);

    @media (min-width: #{$min-width}) {
      @content;
    }
  } @else {
    @error "No value found for breakpoint '#{$breakpoint}'.";
  }
}

@mixin to($breakpoint) {
  @if map.has-key($slicer-breakpoints, $breakpoint) {
    $max-width: map.get($slicer-breakpoints, $breakpoint);

    @media (max-width: #{$max-width}) {
      @content;
    }
  } @else {
    @error "No value found for breakpoint '#{$breakpoint}'.";
  }
}

@mixin between($start, $end) {
  @if map.has-key($slicer-breakpoints, $start) and
    map.has-key($slicer-breakpoints, $end)
  {
    $min-width: map.get($slicer-breakpoints, $start);
    $max-width: map.get($slicer-breakpoints, $end);

    @media (min-width: #{$min-width}) and (max-width: #{$max-width}) {
      @content;
    }
  } @else {
    @error "No value found for one of the breakpoints '#{$start}' or '#{$end}'.";
  }
}

@mixin at($breakpoint) {
  @if map.has-key($slicer-breakpoints, $breakpoint) {
    $min-width: map.get($slicer-breakpoints, $breakpoint);
    $breakpoint-keys: map.keys($slicer-breakpoints);
    $current-index: list.index($breakpoint-keys, $breakpoint);

    @if $current-index < list.length($breakpoint-keys) {
      $next-breakpoint: list.nth($breakpoint-keys, $current-index + 1);
      $max-width: map.get($slicer-breakpoints, $next-breakpoint) - 1px;

      @media (min-width: #{$min-width}) and (max-width: #{$max-width}) {
        @content;
      }
    } @else {
      @media (min-width: #{$min-width}) {
        @content;
      }
    }
  } @else {
    @error "No value found for breakpoint '#{$breakpoint}'.";
  }
}
